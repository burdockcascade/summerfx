modules:
  - name: Window
    functions:
      - name: Init
        description: Open a window with the specified title, width, and height.
        usage:
          - Window.Init("My Game", 800, 600)
        params:
          - name: title
            type: string
            description: The title of the window.   
          - name: width
            type: int
            description: The width of the window.
          - name: height
            type: int
            description: The height of the window.
      - name: Close
        description: Close the window.
        usage:
          - Window.Close()
        params:
      - name: IsWindowReady
        description: Check if the window is ready.
        usage:
          - if Window.IsReady() then Window.SetTargetFPS(60) end
        params:
      - name: ShouldClose
        description: Check if the window should close.
        usage:
          - if Window.ShouldClose() then Window.Close() end
        params:
      - name: SetTargetFPS
        description: Set the target FPS of the window.
        usage:
          - Window.SetTargetFPS(60)
        params:
          - name: fps
            type: int
            description: The target FPS.
      - name: SetTitle
        description: Set the title of the window.
        usage:
          - Window.SetTitle("My Game")
        params:
          - name: title
            type: string
            description: The title of the window.
      - name: ClearBackground
        description: Clear the background with the specified color.
        usage:
          - Window.ClearBackground(Color(255, 255, 255, 255))
        params:
          - name: color
            type: Color
            description: The color to clear the background with.
      - name: BeginDrawing
        description: Begin drawing to the window.
        usage:
          - Window.BeginDrawing()
        params:
      - name: EndDrawing
        description: End drawing to the window.
        usage:
          - Window.EndDrawing()
        params:
      - name: GetWidth
        description: Get the width of the window.
        usage:
          - Window.GetWidth()
        params:
      - name: GetHeight
        description: Get the height of the window.
        usage:
          - Window.GetHeight()
        params:
      - name: IsFullscreen
        description: Check if the window is fullscreen.
        usage:
          - Window.IsFullscreen()
        params:
      - name: IsFocused
        description: Check if the window is focused.
        usage:
          - Window.IsFocused()
        params:
      - name: IsHidden
        description: Check if the window is hidden.
        usage:
          - Window.IsHidden()
        params:
      - name: IsMinimized
        description: Check if the window is minimized.
        usage:
          - Window.IsMinimized()
        params:
      - name: IsMaximized
        description: Check if the window is maximized.
        usage:
          - Window.IsMaximized()
        params:
      - name: Minimize
        description: Minimize the window.
        usage:
          - Window.Minimize()
        params:
      - name: Maximize
        description: Maximize the window.
        usage:
          - Window.Maximize()
        params:
      - name: GetPosition
        description: Get the position of the window.
        usage:
          - Window.GetPosition()
        params:
      - name: TakeScreenshot
        description: Take a screenshot of the window.
        usage:
          - Window.TakeScreenshot("screenshot.png")
        params:
          - name: filename
            type: string
            description: The filename to save the screenshot to.
      - name: GetElapsedTime
        description: Returns the elapsed time in seconds since the window was opened.
        usage:
          - Window.GetElapsedTime()
        params:
      - name: GetFrameTime
        description: Returns the time in seconds since the last frame.
        usage:
          - Window.GetFrameTime()
        params:
      - name: GetFPS
        description: Returns the current FPS.
        usage:
          - Window.GetFPS()
        params:
      - name: ShowCursor
        description: Show the cursor.
        usage:
          - Window.ShowCursor()
        params:
      - name: HideCursor
        description: Hide the cursor.
        usage:
          - Window.HideCursor()
        params:
      - name: IsCursorHidden
        description: Check if the cursor is hidden.
        usage:
          - Window.IsCursorHidden()
        params:
      - name: EnableCursor
        description: Enable the cursor.
        usage:
          - Window.EnableCursor()
        params:
      - name: DisableCursor
        description: Disable the cursor.
        usage:
          - Window.DisableCursor()
        params:
      - name: IsCursorOnScreen
        description: Check if the cursor is on the screen.
        usage:
          - Window.IsCursorOnScreen()
        params:
  - name: Graphics2d
    functions:
      - name: DrawText
        description: Draw text using font inside rectangle limits
        usage:
        params:
          - name: string
            type: text
            description: The text to draw
          - name: Vector2
            type: position
            description: The position of the text
          - name: int
            type: fontSize
            description: The font size of the text
          - name: Color
            type: color
            description: The color of the text
      - name: DrawFPS
        description: Draw the FPS at the specified position.
        usage:
        params:
          - name: x
            type: int
            description: The x position to draw the FPS.
          - name: y
            type: int
            description: The y position to draw the FPS.
      - name: DrawPixel
        description: Draw a pixel
        usage:
        params:
          - name: Vector2
            type: position
            description: The position of the pixel
          - name: Color
            type: color
            description: The color of the pixel
      - name: DrawRectangle
        description: Draw a rectangle
        usage:
        params:
          - name: rectangle
            type: rectangle
            description: The rectangle to draw
          - name: Color
            type: color
            description: The color of the rectangle
      - name: DrawRectangleLines
        description: Draw a rectangle outline
        usage:
        params:
          - name: rectangle
            type: rectangle
            description: The rectangle to draw
          - name: int
            type: lineThickness
            description: The thickness of the lines
          - name: Color
            type: color
            description: The color of the lines
      - name: DrawRectangleRounded
        description: Draw a rectangle with rounded edges
        usage:
        params:
          - name: rectangle
            type: rectangle
            description: The rectangle to draw
          - name: float
            type: roundness
            description: The roundness of the edges
          - name: int
            type: segments
            description: The number of segments to use
          - name: Color
            type: color
            description: The color of the rectangle
      - name: DrawRectangleRoundedLines
        description: Draw a rectangle with rounded edges
        usage:
        params:
          - name: rectangle
            type: rectangle
            description: The rectangle to draw
          - name: float
            type: roundness
            description: The roundness of the edges
          - name: int
            type: segments
            description: The number of segments to use
          - name: int
            type: lineThickness
            description: The thickness of the lines
          - name: Color
            type: color
            description: The color of the lines
      - name: DrawRectangleGradientV
        description: Draw a rectangle with a vertical gradient
        usage:
        params:
          - name: rectangle
            type: rectangle
            description: The rectangle to draw
          - name: Color
            type: color1
            description: The first color of the gradient
          - name: Color
            type: color2
            description: The second color of the gradient
      - name: DrawRectangleGradientH
        description: Draw a rectangle with a horizontal gradient
        usage:
        params:
          - name: rectangle
            type: rectangle
            description: The rectangle to draw
          - name: Color
            type: color1
            description: The first color of the gradient
          - name: Color
            type: color2
            description: The second color of the gradient
      - name: DrawRectangleGradientEx
        description: Draw a rectangle with a gradient
        usage:
        params:
          - name: rectangle
            type: rectangle
            description: The rectangle to draw
          - name: c1
            type: Color
            description: The first color of the gradient
          - name: c2
            type: Color
            description: The second color of the gradient
          - name: c3
            type: Color
            description: The third color of the gradient
          - name: c4
            type: Color
            description: The fourth color of the gradient
      - name: DrawPoly
        description: Draw a polygon
        usage:
        params:
          - name: Vector2
            type: position
            description: The position of the polygon
          - name: sides
            type: int
            description: The number of sides of the polygon
          - name: radius
            type: float
            description: The radius of the polygon
          - name: rotation
            type: float
            description: The rotation of the polygon
          - name: color
            type: Color
            description: The color of the polygon
      - name: DrawLine
        description: Draw a line
        usage:
        params:
          - name: start
            type: Vector2
            description: The start position of the line
          - name: end
            type: Vector2
            description: The end position of the line
          - name: color
            type: Color
            description: The color of the line
      - name: DrawCircle
        description: Draw a circle
        usage:
        params:
          - name: position
            type: Vector2
            description: The position of the circle
          - name: radius
            type: float
            description: The radius of the circle
          - name: color
            type: Color
            description: The color of the circle
      - name: DrawCircleLines
        description: Draw a circle outline
        usage:
        params:
          - name: position
            type: Vector2
            description: The position of the circle
          - name: radius
            type: float
            description: The radius of the circle
          - name: color
            type: Color
            description: The color of the circle
      - name: DrawCircleSector
        description: Draw a circle sector
        usage:
        params:
          - name: position
            type: Vector2
            description: The position of the circle
          - name: radius
            type: float
            description: The radius of the circle
          - name: startAngle
            type: int
            description: The start angle of the sector
          - name: endAngle
            type: int
            description: The end angle of the sector
          - name: segments
            type: int
            description: The number of segments to use
          - name: color
            type: Color
            description: The color of the circle
      - name: DrawCircleSectorLines
        description: Draw a circle sector outline
        usage:
        params:
          - name: position
            type: Vector2
            description: The position of the circle
          - name: radius
            type: float
            description: The radius of the circle
          - name: startAngle
            type: int
            description: The start angle of the sector
          - name: endAngle
            type: int
            description: The end angle of the sector
          - name: segments
            type: int
            description: The number of segments to use
          - name: color
            type: Color
            description: The color of the circle
      - name: DrawCircleGradient
        description: Draw a circle with a gradient
        usage:
        params:
          - name: positionVector2
            type: The
            description: position of the circle
          - name: radius
            type: float
            description: The radius of the circle
          - name: c1
            type: Color
            description: The first color of the gradient
          - name: c2
            type: Color
            description: The second color of the gradient
  - name: Input
    functions:
      - name: IsKeyPressed
        description: Check if a key has been pressed once
        usage:
          - if Input.IsKeyPressed(Key.A) then
        params:
          - name: key
            type: int
            description: The key to check
      - name: IsKeyPressedRepeat
        description: Check if a key has been pressed and is being held down
        usage:
          - if Input.IsKeyPressedRepeat(Key.A) then
        params:
          - name: key
            type: int
            description: The key to check
      - name: IsKeyDown
        description: Check if a key is being held down
        usage:
          - if Input.IsKeyDown(Key.A) then
        params:
          - name: key
            type: int
            description: The key to check
      - name: IsKeyReleased
        description: Check if a key has been released
        usage:
        params:
          - name: key
            type: int
            description: The key to check
      - name: IsKeyUp
        description: Check if a key is not being held down
        usage:
        params:
          - name: key
            type: int
            description: The key to check
      - name: GetKeyPressed
        description: Get the last key pressed
        usage:
        params:
      - name: GetCharPressed
        description: Get the last char pressed
        usage:
        params:
      - name: IsMouseButtonPressed
        description: Check if a mouse button has been pressed once
        usage:
        params:
          - name: button
            type: int
            description: The button to check
      - name: IsMouseButtonDown
        description: Check if a mouse button is being held down    
        usage:
        params:
          - name: button
            type: int
            description: The button to check
      - name: IsMouseButtonReleased
        description: Check if a mouse button has been released
        usage:
        params:
          - name: button
            type: int
            description: The button to check
      - name: IsMouseButtonUp
        description: Check if a mouse button is not being held down
        usage:
        params:
          - name: button
            type: int
            description: The button to check
      - name: GetMouseX
        description: Get the x position of the mouse
        usage:
        params:
      - name: GetMouseY
        description: Get the y position of the mouse
        usage:
        params:
      - name: GetMousePosition
        description: Get the position of the mouse
        usage:
        params:
      - name: SetMousePosition
        description: Set the position of the mouse
        usage:
        params:
          - name: x
            type: int
            description: The x position of the mouse
          - name: y
            type: int
            description: The y position of the mouse
      - name: SetMouseOffset
        description: Set the offset of the mouse
        usage:
        params:
          - name: x
            type: int
            description: The x offset of the mouse
          - name: y
            type: int
            description: The y offset of the mouse
      - name: SetMouseScale
        description: Set the scale of the mouse
        usage:
        params:
          - name: x
            type: int
            description: The x scale of the mouse
          - name: y
            type: int
            description: The y scale of the mouse
      - name: GetMouseWheelMove
        description: Get the amount the mouse wheel has moved
        usage:
        params:
      - name: GetMouseWheelMoveV
        description: Get the amount the mouse wheel has moved
        usage:
        params:
      - name: SetMouseCursor
        description: Set the mouse cursor
        usage:
        params:
          - name: cursor
            type: int
            description: The cursor to set
      - name: GetTouchX
        description: Get the x position of a touc
        usage:
        params:
      - name: GetTouchY
        description: Get the y position of a touch
        usage:
        params:
      - name: GetTouchPosition
        description: Get the position of a touch
        usage:
        params:
          - name: touch
            type: int
            description: The touch to get the position of
      - name: GetTouchPointId
        description: Get the id of a touch point
        usage:
        params:
          - name: index
            type: int
            description: The index of the touch point
      - name: GetTouchPointCount
        description: Get the number of touch points
        usage:
        params:
      - name: IsGamepadAvailable
        description: Check if a gamepad is available
        usage:
        params:
          - name: gamepad
            type: int
            description: The gamepad to check
      - name: GetGamepadName
        description: Get the name of a gamepad
        usage:
        params:
          - name: gamepad
            type: int
            description: The gamepad to get the name of
